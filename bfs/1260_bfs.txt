/*

https://www.acmicpc.net/problem/1260

백준 온라인 저지 1260번: DFS와 BFS

*/

#define MAX 1001
#include <stdio.h>

int g[MAX][MAX] = { 0, }; // 그래프 정보
int DFS_visit[MAX] = { 0, }; // 방문한 정점
int BFS_visit[MAX] = { 0, };
int queue[MAX]; // bfs에서 사용할 queue

void DFS(int v, int n) { // 깊이 우선 탐색 (시작점, 정점 개수)
	int i;

	DFS_visit[v] = 1; // 방문 체크
	printf("%d ", v);

	for (i = 1; i <= n; i++) {
		if (g[v][i] == 1 && DFS_visit[i] == 0) // 연결되어 있고 아직 방문하지 않았다면
			DFS(i, n); // 재귀 함수
	}

	return;
}

void BFS(int v, int n) { // 너비 우선 탐색 (시작점, 정점 개수)
	int front = 0, rear = 0, pop, i;

	printf("%d ", v);
	BFS_visit[v] = 1;
	queue[0] = v;
	rear++;

	while (front < rear) {
		pop = queue[front];
		front++;

		for (i = 1; i <= n; i++) {
			if (g[pop][i] == 1 && BFS_visit[i] == 0) {
				printf("%d ", i);
				queue[rear] = i;
				rear++;
				BFS_visit[i] = 1;
			}
		}
	}

	return;
}

int main()
{
	int n, m, v;
	int i, x, y;

	scanf("%d %d %d", &n, &m, &v);

	for (i = 0; i < m; i++) {
		scanf("%d %d", &x, &y);
		g[x][y] = 1; 
		g[y][x] = 1;
	}

	DFS(v, n);
	printf("\n");
	BFS(v, n);

	return 0;
}