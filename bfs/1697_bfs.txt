/*

https://www.acmicpc.net/problem/1697

백준 온라인 저지 1697번: 숨바꼭질

*/

#define MAX 100001
#include <stdio.h>

typedef struct _queue {
	int dest, sec;
} q;
q queue[MAX];

int visit[MAX] = { 0, }; // 중복 체크

void bfs(int N, int K) {
	int front = 0, rear = 0, pd, ps, i;
	queue[0].dest = N;
	queue[0].sec = 0;
	visit[N] = 1; // 수빈 위치 저장
	rear++;

	while (front < rear) {

		pd = queue[front].dest;
		ps = queue[front].sec;
		front++;

		if (pd != K) { // 동생과 위치가 다를 때

			if (pd >= 0 && pd <= MAX) { // 범위 안에 있을 때

				if (pd - 1 >= 0 && visit[pd-1] == 0) {
					queue[rear].dest = pd - 1;
					queue[rear++].sec = ps + 1;
					visit[pd - 1] = 1;
				}
				if (pd + 1 <= MAX && visit[pd+1] == 0) {
					queue[rear].dest = pd + 1;
					queue[rear++].sec = ps + 1;
					visit[pd + 1] = 1;
				}
				if (pd * 2 <= MAX && visit[pd*2] == 0) {
					queue[rear].dest = pd * 2;
					queue[rear++].sec = ps + 1;
					visit[pd * 2] = 1;
				}
			}
		}
		else { // 위치가 같을 때
			printf("%d", ps);
			return;
		}
	}
}

int main()
{
	int n, k;

	scanf("%d %d", &n, &k);

	if (n >= k) { // 동생보다 먼 위치에 있을 때
		printf("%d", n - k); // 그냥 빼주면 됨
		return 0;
	}
	else {
		bfs(n,k);
	}

	return 0;
}