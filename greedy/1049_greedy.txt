/*

https://www.acmicpc.net/problem/1049

백준 온라인 저지 1049번 문제: 기타줄

*/

#include <stdio.h>
#include <stdlib.h>

typedef struct _Guitar
{
    int pack, pi;
} Guitar;

int compare_pack(const void *a, const void *b);
int compare_pi(const void *a, const void *b);

int main()
{
    Guitar g[50];
    int n, m, i, min_pack, min_pi, result;
    
    scanf("%d %d", &n, &m);
    for(i=0; i<m; i++)
        scanf("%d %d", &g[i].pack, &g[i].pi);
    
    qsort(g,m,sizeof(Guitar),compare_pack);
    min_pack = g[0].pack; // 제일 저렴한 패키지
    qsort(g,m,sizeof(Guitar),compare_pi);
    min_pi = g[0].pi; // 제일 저렴한 낱개
    
    if (n<=6) // 6개 이하일 때
    {
        if(min_pack > min_pi*6)
            result = min_pi * n;
        else
            result = min_pack;
    }
    else // 6개 넘을 때
    {
        if(min_pack > min_pi*6)
            result = min_pi*n;
        else
        {
            result = min_pack * (n / 6);
            if(min_pack > (n % 6) * min_pi)
                result += (n % 6) * min_pi;
            else
                result += min_pack;
        }
    }
    
    printf("%d",result);
    
    return 0;
}

int compare_pack(const void *a, const void *b)
{
    Guitar* ptrA = (Guitar *)a;
    Guitar* ptrB = (Guitar *)b;
    
    if (ptrA->pack < ptrB->pack)
        return -1;
    if (ptrA->pack > ptrB->pack)
        return 1;   
    
    return 0;
}

int compare_pi(const void *a, const void *b)
{
    Guitar* ptrA = (Guitar *)a;
    Guitar* ptrB = (Guitar *)b;
    
    if (ptrA->pi < ptrB->pi)
        return -1;
    if (ptrA->pi > ptrB->pi)
        return 1;   
    
    return 0;
}