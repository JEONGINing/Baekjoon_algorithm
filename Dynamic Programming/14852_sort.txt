/*

백준 온라인 저지 14852번: 타일 채우기 3

https://www.acmicpc.net/problem/14852

*/

#include <stdio.h>

long long d[1000001][2]; // d[n] = 2*d[n-1] + 3*d[n-2] + 2*(d[n-3] + ... + d[0]) 이차원 배열에 분리

long long dp(int x) {
    d[0][0] = 0;
    d[1][0] = 2; // n이 1일 때 경우의 수
    d[2][0] = 7; // n이 2일 때 경우의 수
    d[2][1] = 1; // d[0]
    
    for (int i=3; i<=x; i++) {
        d[i][1] = (d[i-1][1] + d[i-3][0]) % 1000000007; // d[i-3] + d[i-4] + ... + d[0]
        d[i][0] = (2*d[i-1][0] + 3*d[i-2][0] + 2*d[i][1]) % 1000000007; // 2*d[i-1] + 3*d[i-2] + 2*(d[i-3] + ... + d[0])
    }
    return d[x][0];
}

int main()
{
    int n;
    
    scanf("%d", &n);
    
    printf("%lld", dp(n));
    
    return 0;
}
