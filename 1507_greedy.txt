/*

https://www.acmicpc.net/problem/1507

백준 온라인 저지 1507번 문제: 궁금한 민호

*/


#define MAX 20
#include <stdio.h>

int a[MAX][MAX], d[MAX][MAX];
int result = 0;

void floyd(); // 플로이드 와샬 알고리즘 사용

int main()
{
	floyd();

	if (result != -1)
		printf("%d", result / 2); // 중복해서 더했으니 2로 나눠줌
	else
		printf("%d", result);

	return 0;
}

void floyd()
{
	int n, i, j, k;

	scanf("%d", &n);

	for (i = 0; i < n; i++) {
		for (j = 0; j < n; j++) {
			scanf("%d", &a[i][j]);
			d[i][j] = 1;
		}
	}

	for (k = 0; k < n; k++) {
		for (i = 0; i < n; i++) {
			for (j = 0; j < n; j++) {	
				if (i == j || j == k || k == i) 
					continue; // 거쳐서 가는 경로가 아니므로 continue
				else if (a[i][j] == a[i][k] + a[k][j])
					d[i][j] = 0; // 굳이 없어도 되는 경로이므로 0 넣음
				else if (a[i][j] > a[i][k] + a[k][j]) {
					result = -1; // 최소 이동 시간이라고 할 수 없으므로 불가능
					return;
				}
			}
		}
	}

	for (i = 0; i < n; i++) {
		for (j = 0; j < n; j++) {
			if (d[i][j])
				result += a[i][j]; // 최솟값이 된 도로 이동 시간만큼 더해줌
		}
	}
}